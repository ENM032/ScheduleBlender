using Microsoft.AspNetCore.Identity;
using Microsoft.EntityFrameworkCore;
using Auth.Data;
using ScheduleBlenderWebApp.Areas.Identity.Data;
using DataCalculationLibrary2.Models;
using System.Configuration;

namespace ScheduleBlenderWebApp
{
    // Autogenerated by Visual Studio
    // The configuration and building of the web app is done inside this class
    class Program
    {
        static void Main(string[] args)
        {
            var builder = WebApplication.CreateBuilder(args);
            var connectionString = builder.Configuration.GetConnectionString("ScheduleBlenderWebAppContextConnection") ?? throw new InvalidOperationException("Connection string 'ScheduleBlenderWebAppContextConnection' not found.");

            builder.Services.AddDbContext<ScheduleBlenderWebAppContext>(options => options.UseSqlServer(connectionString));
           
            builder.Services.AddDefaultIdentity<ApplicationUser>(options => options.SignIn.RequireConfirmedAccount = false).AddEntityFrameworkStores<ScheduleBlenderWebAppContext>();
            
            // Add services to the container.
            builder.Services.AddControllersWithViews();

            // Enables us to view the login, registration and logout pages
            builder.Services.AddRazorPages();

            

            //Sets password complexity rules on top of exisiting default settings
            builder.Services.Configure<IdentityOptions>(options =>
            {
                //options.User.RequireUniqueEmail = true;
                options.Password.RequiredLength = 8;               
            });


            
            var app = builder.Build();
            
            // Configure the HTTP request pipeline.
            if (!app.Environment.IsDevelopment())
            {
                app.UseExceptionHandler("/Module/Error");
                // The default HSTS value is 30 days. You may want to change this for production scenarios, see https://aka.ms/aspnetcore-hsts.
                app.UseHsts();
            }
            
            app.UseHttpsRedirection();
            app.UseStaticFiles();
            
            app.UseRouting();
            
            app.UseAuthorization();
            
            app.MapControllerRoute(
                name: "default",
                //pattern: "{controller=Module}/{action=Index}/{id?}");
                pattern: "{controller=Module}/{action=Index}");
            app.MapRazorPages();
            
            app.Run();
        }
    }
}

